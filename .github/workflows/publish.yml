name: Publish Specs

on:
  push:
    branches: [ master ]

env:
  SUBSCRIPTION: "e2d5340c-6f88-4bc6-8c1e-c5792ec4262b"
  RESOURCEGROUP: "ComponentSpecs"

jobs:

  generate_matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate Matrix
        id: generate_matrix
        run: echo "::set-output name=templates::$(find . -name 'componentdeploy.json' | jq -R -s -c 'split("\n")[:-1]')"

    outputs:
      templates: ${{ steps.generate_matrix.outputs.templates }}

  publish_catalog:
    name: Publish Catalog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Extract Context Information
        id: extract_context
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=repo;]$(echo ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY})"
      - name: Ensure Catalog Site
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION }}
          resourceGroupName: ${{ env.RESOURCEGROUP }}
          template: ./_catalog/azuredeploy.json
          parameters: repositoryUrl="${{ steps.extract_context.outputs.repo }}" repositoryBranch="${{ steps.extract_context.outputs.branch }}" repositoryToken="${{ secrets.REPO_ADMIN_TOKEN }}"

  publish_spec:
    name: Publish Spec
    needs: generate_matrix
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 5
      matrix:
        template: ${{ fromJson(needs.generate_matrix.outputs.templates) }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Publish Spec
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            TEMPLATE="${{ matrix.template }}"
            az ts create --subscription "$SUBSCRIPTION" --resource-group "$RESOURCEGROUP" --location "eastus" --name "$(basename $(dirname $TEMPLATE))" --version "$(cat $TEMPLATE | jq --raw-output '.contentVersion')" --template-file "$TEMPLATE" --yes
